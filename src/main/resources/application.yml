 server:
   port: 8088

 spring:
  application:
    name: USER-SERVICE   
 
  datasource:
    url: jdbc:mysql://localhost:3306/microservices
    username: root
    password: root1234
    driver-class-name: com.mysql.cj.jdbc.Driver
  
  
  config:
    import: optional:configserver:http://localhost:8086
    
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-13111056.okta.com/oauth2/default
      client:
         registration:
           my-internal-client:
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id: 0oa8a3ganb6ySnTws5d7
            client-secret: -SDZl02GauzKvK3a5mDqEUsb2mQtKggZi0r_F_4K
          
         provider:
            okta:
              issuer-uri: https://dev-13111056.okta.com/oauth2/default
               
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
      dialect: org.hibernate.dialect.MySQL5Dialect

 management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
     web:
      exposure:
          include: health

  endpoint:
     health:
      show-details: always
      
 resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
         registerHealthIndicator: true 
         eventConsumerBufferSize: 10 
         failureRateThreshold: 50
         minimumNumberOfCalls: 5     
         automaticTransitionFromOpenToHalfOpenEnabled: true
         waitDurationInOpenState: 6s
         permittedNumberOfCallsInHalfOpenState: 3
         slidingWindowSize: 10
         slidingWindowType: COUNT_BASED
 
  retry:
    instances:
     ratingHotelService:
      max-attempts: 3
      wait-duration: 5s
  
  ratelimiter:
    instances:
     userRateLimiter:
      limit-refresh-period: 4s
      limit-for-period: 2
      timeout-duration: 0s
 okta:
  oauth2:
    issuer: https://dev-13111056.okta.com/oauth2/default
    audience: api://default      
         
     